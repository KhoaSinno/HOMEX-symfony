{% extends 'baseCustomer.html.twig' %}

{% block title %}Tìm kiếm bác sĩ
{% endblock %}

{% block styles %}{% endblock %}

{% block body %}
	<!-- Breadcrumb -->
	<div class="breadcrumb-bar">
		<div class="container-fluid">
			<div class="row align-items-center">
				<div class="col-md-8 col-12">
					<nav aria-label="breadcrumb" class="page-breadcrumb">
						<ol class="breadcrumb">
							<li class="breadcrumb-item">
								<a href="{{path('app_home')}}">Trang chủ</a>
							</li>
							<li class="breadcrumb-item active" aria-current="page">Tìm kiếm</li>
						</ol>
					</nav>
					<h3 class="breadcrumb-title">
						{{ count }}
						kết quả được tìm thấy cho:
						{{ (search_specialty is iterable ? search_specialty|join(', ') : search_specialty)|capitalize|default('Tất cả chuyên khoa') }}
						tại
						{{ search_address|capitalize|default('Tất cả địa điểm') }}
					</h3>

				</div>

			</div>
		</div>
	</div>
	<!-- /Breadcrumb -->

	<!-- Page Content -->
	<div class="content">
		<div class="container-fluid">

			<div class="row">
				<div
					class="col-md-12 col-lg-4 col-xl-3 theiaStickySidebar">

					<!-- Search Filter -->
					<div class="card search-filter">
						<div class="card-header">
							<h4 class="card-title mb-0">Bộ lọc tìm kiếm</h4>
						</div>
						<div class="card-body">
							<form method="GET" action="{{ path('app_search_doctor') }}">

								<div class="filter-widget">
									<div class="cal-icon">
										<input type="text" class="form-control schedule-datepicker" name="date" placeholder="Chọn ngày" value="{{ selected_date|default('') }}">
									</div>
								</div>

								<div class="filter-widget">
									<h4>Giới tính</h4>
									<div>
										<label class="custom_check">
											<input type="checkbox" name="gender_type[]" value="Male" {{ 'Male' in app.request.get('gender_type', []) ? 'checked' : '' }}>
											<span class="checkmark"></span>
											Nam
										</label>
									</div>
									<div>
										<label class="custom_check">
											<input type="checkbox" name="gender_type[]" value="Female" {{ 'Female' in app.request.get('gender_type', []) ? 'checked' : '' }}>
											<span class="checkmark"></span>
											Nữ
										</label>
									</div>
								</div>

								<div class="filter-widget">
									<h4>Chuyên khoa</h4>
									{% set selected_specialists = app.request.get('select_specialist', []) %}
									{% for specialist in ['Urology', 'Neurology', 'Dentist', 'Orthopedic', 'Cardiologist'] %}
										<div>
											<label class="custom_check">
												<input type="checkbox" name="select_specialist[]" value="{{ specialist }}" {{ specialist in selected_specialists ? 'checked' : '' }}>
												<span class="checkmark"></span>
												{{ specialist | specialty_label }}
											</label>
										</div>
									{% endfor %}
								</div>

								<div class="btn-search">
									<button type="submit" class="btn btn-block">Tìm kiếm</button>
								</div>
								<a href="{{ path('app_search_doctor') }}" class="btn btn-outline-secondary btn-block mt-2">Đặt lại bộ lọc</a>
							</form>
						</div>
					</div>
					<!-- /Search Filter -->


				</div>

				<div class="col-md-12 col-lg-8 col-xl-9">

					{% for doctor in doctors %}
						<!-- Doctor Widget -->
						<div class="card doctor-item">
							<div class="card-body">
								<div class="doctor-widget">
									<div class="doc-info-left">
										<div class="doctor-img">
											<a href="{{path('app_doctor_profile', {'id': doctor.id})}}">
												<img src="{{doctor.image ? asset('uploads/users/' ~ doctor.image) : asset('uploads/users/defaultUser.png') }}" class="img-fluid" alt="User Image">

											</a>
										</div>
										<div class="doc-info-cont">
											<h4 class="doc-name">
												<a href="{{path('app_doctor_profile', {'id': doctor.id})}}">{{doctor.fullname}}</a>
											</h4>
											<p class="doc-speciality">
												{{doctor.qualification}}</p>
											<h5 class="doc-department">
												<img src="{{ doctor.specialty and doctor.specialty.image ? asset('uploads/specialty/' ~ doctor.specialty.image) : asset('uploads/specialty/specialtyDf.png') }}" class="img-fluid" alt="Speciality">

												{{doctor.specialty | specialty_label}}
											</h5>

											<div
												class="clinic-details">
												{# <p class="doc-location">
																									<i class="fas fa-map-marker-alt"></i>
																									{{doctor.address}}</p> #}
												<p>
													<i class="far fa-money-bill-alt"></i>
													{{doctor.consultationFee | currency_vnd}}
													<i class="fas fa-info-circle" data-toggle="tooltip" title="Phí khám"></i>
												</p>

												{# Hiển thị trung bình đánh giá #}
												<p class="doc-avg_star">
													<span class="text-warning">
														{% for i in 1..5 %}
															<i class="fas fa-star{% if i > doctor.getAverageRating|round(0, 'floor') %}-o{% endif %}"></i>
														{% endfor %}
													</span>
													<span>({{ doctor.getAverageRating|number_format(1) }}
														/ 5)</span>
												</p>
											</div>


										</div>
									</div>
									<div class="doc-info-right">
										<div class="clini-infos">
											<ul>
												<li>
													<i class="far fa-money-bill-alt"></i>
													{{doctor.consultationFee | currency_vnd}}
													<i class="fas fa-info-circle" data-toggle="tooltip" title="Phí khám"></i>
												</li>
											</ul>
										</div>
										<div class="clinic-booking">
											<a class="apt-btn" href="{{path('app_doctor_profile', {'id': doctor.id})}}">Đặt lịch</a>
										</div>
									</div>
								</div>
							</div>
						</div>
						<!-- /Doctor Widget -->

					{% else %}
						<p>No doctors found.</p>
					{% endfor %}

					<!-- Phân trang -->
					<div class="pagination text-center m-4 d-flex justify-content-center align-items-center" id="pagination"></div>
				</div>

			</div>

		</div>

	</div>
	<!-- /Page Content -->
{% endblock %}

{% block JSCustom %}
	<!-- Select2 JS -->
	<script src="{{asset('customer/assets/plugins/select2/js/select2.min.js')}}"></script>

	<!-- Datetimepicker JS -->
	{# <script src="{{asset('customer/assets/js/moment.min.js')}}"></script>
				<script src="{{asset('customer/assets/js/bootstrap-datetimepicker.min.js')}}"></script> #}

	<!-- Fancybox JS --><script src="{{asset('customer/assets/plugins/fancybox/jquery.fancybox.min.js')}}"> </script>

	<script>
		$(document).ready(function () {
setupPagination('.doctor-item', '#pagination', 5, 5);
});
	</script>

	<!-- Moment.js (Cần thiết cho datetimepicker) -->
	<script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.4/moment.min.js"></script>

	<!-- Bootstrap Datetimepicker -->
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/css/bootstrap-datetimepicker.min.css">
	<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap-datetimepicker/4.17.47/js/bootstrap-datetimepicker.min.js"></script>

	<script>
		$(document).ready(function () {
console.log("DOM Loaded, initializing datetimepicker...");

// Cấu hình Moment.js để tuần bắt đầu từ Thứ Hai
moment.updateLocale('vi', {
week: {
dow: 1
} // dow: 1 => Tuần bắt đầu từ Thứ Hai
});

$('.schedule-datepicker').datetimepicker({
format: 'DD/MM/YYYY', // Định dạng ngày
locale: 'vi', // Tiếng Việt (cần moment.js)
showTodayButton: true, // Hiển thị nút "Hôm nay"
useCurrent: false, // Không tự động chọn ngày hiện tại
sideBySide: true, // Hiển thị giờ/phút cạnh nhau
toolbarPlacement: 'top', // Vị trí toolbar
showClear: true, // Hiển thị nút "Xóa"
showClose: true, // Hiển thị nút "Đóng"
defaultDate: new Date()
});
});
	</script>
	<!-- Script phân trang -->
	{# <script>
			$(document).ready(function() {
			    var itemsPerPage = 5; // Số bác sĩ hiển thị mỗi trang
			    var $doctorItems = $('.doctor-item'); // Lấy tất cả các doctor-item
			    var totalItems = $doctorItems.length; // Tổng số bác sĩ
			    var totalPages = Math.ceil(totalItems / itemsPerPage); // Tổng số trang
			    var maxPagesToShow = 5; // Số nút trang tối đa hiển thị (trước khi dùng "...")
			    var currentPage = 1; // Trang hiện tại
			
			    // Hiển thị trang
			    function showPage(page) {
			        $doctorItems.hide(); // Ẩn tất cả
			        var start = (page - 1) * itemsPerPage;
			        var end = start + itemsPerPage;
			        $doctorItems.slice(start, end).show(); // Hiển thị các phần tử trong trang hiện tại
			        currentPage = page;
			        updatePagination(); // Cập nhật phân trang
			    }
			
			    // Tạo nút phân trang
			    function updatePagination() {
			        var paginationHtml = '';
			
			        // Nút Previous
			        paginationHtml += '<button class="btn btn-sm btn-outline-primary mx-1 page-btn ' + (currentPage === 1 ? 'disabled' : '') + '" data-page="' + (currentPage - 1) + '">&laquo; Trước</button>';
			
			        // Tính toán phạm vi trang hiển thị
			        var startPage, endPage;
			        if (totalPages <= maxPagesToShow) {
			            startPage = 1;
			            endPage = totalPages;
			        } else {
			            var halfPagesToShow = Math.floor(maxPagesToShow / 2);
			            startPage = Math.max(1, currentPage - halfPagesToShow);
			            endPage = Math.min(totalPages, currentPage + halfPagesToShow);
			
			            // Điều chỉnh nếu ở đầu hoặc cuối
			            if (endPage - startPage + 1 < maxPagesToShow) {
			                if (startPage === 1) {
			                    endPage = maxPagesToShow;
			                } else {
			                    startPage = totalPages - maxPagesToShow + 1;
			                }
			            }
			        }
			
			        // Thêm "..." ở đầu nếu cần
			        if (startPage > 1) {
			            paginationHtml += '<button class="btn btn-sm btn-outline-primary mx-1 page-btn" data-page="1">1</button>';
			            if (startPage > 2) {
			                paginationHtml += '<span class="mx-1">...</span>';
			            }
			        }
			
			        // Tạo các nút số trang
			        for (var i = startPage; i <= endPage; i++) {
			            paginationHtml += '<button class="btn btn-sm mx-1 page-btn ' + (i === currentPage ? 'btn-primary' : 'btn-outline-primary') + '" data-page="' + i + '">' + i + '</button>';
			        }
			
			        // Thêm "..." ở cuối nếu cần
			        if (endPage < totalPages) {
			            if (endPage < totalPages - 1) {
			                paginationHtml += '<span class="mx-1">...</span>';
			            }
			            paginationHtml += '<button class="btn btn-sm btn-outline-primary mx-1 page-btn" data-page="' + totalPages + '">' + totalPages + '</button>';
			        }
			
			        // Nút Next
			        paginationHtml += '<button class="btn btn-sm btn-outline-primary mx-1 page-btn ' + (currentPage === totalPages ? 'disabled' : '') + '" data-page="' + (currentPage + 1) + '">Tiếp &raquo;</button>';
			
			        $('#pagination').html(paginationHtml);
			    }
			
			    // Xử lý khi nhấn nút phân trang
			    $('#pagination').on('click', '.page-btn:not(.disabled)', function() {
			        var page = $(this).data('page');
			        showPage(page);
			    });
			
			    // Khởi tạo
			    if (totalItems > 0) {
			        showPage(1); // Hiển thị trang đầu tiên
			    }
			});
			</script> #}
{% endblock %}
